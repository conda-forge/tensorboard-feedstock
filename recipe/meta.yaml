{% set version = "1.15.0" %}
{% set build_number = 0 %}

package:
  name: tensorboard
  version: {{ version }}

source:
  url: https://pypi.io/packages/py2/t/tensorboard/tensorboard-{{ version }}-py2-none-any.whl  # [py2k]
  sha256: 612b789386aa1b2c4804e1961273b37f8e4dd97613f98bc90ff0402d24627f50  # [py2k]
  url: https://pypi.io/packages/py3/t/tensorboard/tensorboard-{{ version }}-py3-none-any.whl  # [py3k]
  sha256: 4cad2c65f6011e51609b463014c014fd7c6ddd9c1263af1d4f18dd97ed88c2bc  # [py3k]

build:
  number: {{ build_number }}
  script:
    - python -m pip install --no-deps --ignore-installed ./tensorboard-{{ version }}-py2-none-any.whl  # [py2k]
    - python -m pip install --no-deps --ignore-installed ./tensorboard-{{ version }}-py3-none-any.whl  # [py3k]
  entry_points:
    - tensorboard = tensorboard.main:run_main

requirements:
  # See: https://pypi.org/project/tensorboard
  build:
    - python
    - pip
  run:
    - python
    - numpy >=1.12.0
    - six >=1.10.0
    - protobuf >=3.4.0
    - werkzeug >=0.11.10
    - markdown >=2.6.8
    - futures >=3.1.1   # [py27]

    #
    # After splitting out of tensorflow, the tensorboard pypi package is problematic:
    #
    #  - tensorflow does not need tensorboard to work
    #    (but depends on it, just to avoid surprising the users that were used to have tensorboard in the package)
    #
    #  - tensorboard does need tensorflow to work
    #    (but does not depend on it explicitly to avoid cyclical dependencies)
    #
    # This means that the tensorboard package is not standalone and should always be installed
    # by installing tensorflow. At the moment we are mirroring in conda-forge the wrongs on
    # pypi.
    #
    # Also note that this makes the noarch nature of the package a bit of a wishful thinking
    # (we can use tensorboard only on platforms with a tensorflow package available).
    #
    # See:
    #  Issue in TB tracker: https://github.com/tensorflow/tensorboard/issues/410
    #  Initial recipe PR: https://github.com/conda-forge/staged-recipes/pull/3866
    #  Issue in the TF recipe: https://github.com/conda-forge/tensorflow-feedstock/issues/42
    #
    # An alternative solution would be to uncomment the tensorflow dependency down here
    # and remove the tensorflow dependency on the tensorboard package. Pros: this would create
    # a saner dependency cycle. Cons: it would be inconsitent with the official pypi releases.
    #
    # - tensorflow >=1.4.0
    #

test:
  imports:
    - tensorboard
  # N.B. CLI tests are in the tensorflow package recipe (to avoid having an explicit circular dependency)
  # To be super-strict, we should run the original tests with bazel against the newly created package

about:
  home: https://github.com/tensorflow/tensorboard
  license: Apache 2.0
  license_file: '{{ environ["RECIPE_DIR"] }}/LICENSE'
  summary: "TensorFlow's Visualization Toolkit"

extra:
  recipe-maintainers:
    - sdvillal
    - danielfrg
    - gilbertfrancois
    - farhantejani
    - dougalsutherland
